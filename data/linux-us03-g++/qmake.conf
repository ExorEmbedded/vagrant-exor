#
# qmake configuration for linux-g++ with modifications for building with OpenEmbedded
#

MAKEFILE_GENERATOR	= UNIX
CONFIG += incremental
QMAKE_INCREMENTAL_STYLE = sublib

OE_QMAKE_AR = arm-poky-linux-gnueabi-ar
OE_QMAKE_CC = arm-poky-linux-gnueabi-gcc  -march=armv7-a -marm -mfpu=neon  -mfloat-abi=hard -mcpu=cortex-a9 --sysroot=$$[QT_SYSROOT]
OE_QMAKE_CFLAGS =  -O2 -pipe -g -feliminate-unused-debug-types
OE_QMAKE_COMPILER = arm-poky-linux-gnueabi-gcc  -march=armv7-a -marm -mfpu=neon  -mfloat-abi=hard -mcpu=cortex-a9 --sysroot=$$[QT_SYSROOT]
OE_QMAKE_CXX = arm-poky-linux-gnueabi-g++  -march=armv7-a -marm -mfpu=neon  -mfloat-abi=hard -mcpu=cortex-a9 --sysroot=$$[QT_SYSROOT]
OE_QMAKE_CXXFLAGS =  -O2 -pipe -g -feliminate-unused-debug-types
OE_QMAKE_LDFLAGS = -Wl,-O1 -Wl,--hash-style=gnu -Wl,--as-needed
OE_QMAKE_LINK = arm-poky-linux-gnueabi-g++  -march=armv7-a -marm -mfpu=neon  -mfloat-abi=hard -mcpu=cortex-a9 --sysroot=$$[QT_SYSROOT]
OE_QMAKE_STRIP = echo

include(../common/linux.conf)

# QMAKE_<TOOL> (moc, uic, rcc) are gone, overwrite only ar and strip
QMAKE_AR              = $$OE_QMAKE_AR cqs
QMAKE_STRIP           = $$OE_QMAKE_STRIP
QMAKE_WAYLAND_SCANNER = $$OE_QMAKE_WAYLAND_SCANNER

include(../common/gcc-base-unix.conf)

# *FLAGS from gcc-base.conf
QMAKE_CFLAGS                += $$OE_QMAKE_CFLAGS
QMAKE_CXXFLAGS              += $$OE_QMAKE_CXXFLAGS
QMAKE_LFLAGS                += $$OE_QMAKE_LDFLAGS

include(../common/g++-unix.conf)

# tc settings from g++-base.conf
QMAKE_COMPILER = $$OE_QMAKE_COMPILER gcc
QMAKE_CC       = $$OE_QMAKE_CC
QMAKE_CXX      = $$OE_QMAKE_CXX

QMAKE_CFLAGS_RELEASE_WITH_DEBUGINFO += $$OE_QMAKE_CFLAGS

QMAKE_LINK         = $$OE_QMAKE_LINK
QMAKE_LINK_SHLIB   = $$OE_QMAKE_LINK
QMAKE_LINK_C       = $$OE_QMAKE_LINK
QMAKE_LINK_C_SHLIB = $$OE_QMAKE_LINK

# for the SDK
isEmpty(QMAKE_QT_CONFIG):QMAKE_QT_CONFIG = $(OE_QMAKE_QT_CONFIG)

include(../oe-device-extra.pri)

IMX6_CFLAGS             = -DLINUX=1
QMAKE_LIBS_EGL         += -lEGL
QMAKE_LIBS_OPENGL_ES2  += -lGLESv2 -lEGL -lGAL
QMAKE_LIBS_OPENVG      += -lOpenVG -lEGL -lGAL
QMAKE_CFLAGS_RELEASE   += $$IMX6_CFLAGS
QMAKE_CXXFLAGS_RELEASE += $$IMX6_CFLAGS
QMAKE_CFLAGS_DEBUG   += $$IMX6_CFLAGS
QMAKE_CXXFLAGS_DEBUG += $$IMX6_CFLAGS

load(qt_config)

